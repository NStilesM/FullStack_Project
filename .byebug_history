c
quit
response.body
response
c
quit
@groups[0].question.all
@groups[0].questions.all
@groups[0].questions
@groups[0]
@groups
quit
response.status
response.body
response
c
quit
@question
quit
y
quit
response.status
response.statuscode
response.body
c
quit
response.body
quit
user.errors.messages == nil
user.errors.messages == {}
users.errors.messages == {}
user.errors.messages
quit
user
user.errors
c
quit
user.errors
c
quit
:user
user
c
quit
@question
Question.exists?(title: title)
Question
quit
c
identifier
c
quit
@question
c
s
test_question
quit
c
s
question
quit
response.body
response
quit
login_params
current_user
@user
c
n
identifier
c
s
quit
login_params
session_params
session.params
params
:identifier
user
quit
current_user
@user
c
quit
current_user
@user
c
s
quit
quot
session[:session_token]
unless session[:session_token]
session[:session_token]
session[:session_token
session
quit
User.find_by(session_token: session[:session_token])
qUser.find_by(session_token: session[:session_token])
quit
current_user
quit
params
@user
current_user
quit
@user
quit
current_user
@user
params
quit
params[:user]
params
quit
qiot
params[:user]
params
@user
User.find_by(session_token: session[:session_token])
session[:session_token]
session
quit
current_user
quit
params
@user
current_user
quit
@user
quit
current_user
@user
params
quit
params[:user]
params
quit
qiot
params[:user]
params
@user
